{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5000/api';\nexport const fetchData = async endpoint => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/${endpoint}`);\n    if (!response.ok) throw new Error('Network response was not ok');\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\nexport const postData = async (endpoint, data) => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) throw new Error('Network response was not ok');\n    return await response.json();\n  } catch (error) {\n    console.error('Error posting data:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","fetchData","endpoint","response","fetch","ok","Error","json","error","console","postData","data","method","headers","body","JSON","stringify"],"sources":["C:/Users/chris/Documents/website/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const fetchData = async (endpoint) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/${endpoint}`);\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const postData = async (endpoint, data) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/${endpoint}`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) throw new Error('Network response was not ok');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error posting data:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,IAAIE,QAAQ,EAAE,CAAC;IAC3D,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChE,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAAA,CAAOR,QAAQ,EAAES,IAAI,KAAK;EAChD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,IAAIE,QAAQ,EAAE,EAAE;MAC1DU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChE,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}