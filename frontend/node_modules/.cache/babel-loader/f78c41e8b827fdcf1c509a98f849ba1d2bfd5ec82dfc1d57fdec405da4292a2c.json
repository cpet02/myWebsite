{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Documents\\\\website\\\\myWebsite\\\\frontend\\\\src\\\\pages\\\\Contact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const [status, setStatus] = useState('');\n\n  // Function to determine if the current host is a private IP\n  const isPrivateIP = hostname => {\n    // Check for 192.168.x.x\n    if (/^192\\.168\\./.test(hostname)) return true;\n    // Check for 10.x.x.x\n    if (/^10\\./.test(hostname)) return true;\n    // Check for 172.16.x.x to 172.31.x.x\n    if (/^172\\.(1[6-9]|2[0-9]|3[0-1])\\./.test(hostname)) return true;\n    return false;\n  };\n\n  // Determine the correct API URL based on the environment\n  const hostname = window.location.hostname;\n  const isLocalNetwork = isPrivateIP(hostname);\n  const isCampusNetwork = hostname.includes('172.17.69.71');\n  const apiUrl = isLocalNetwork ? `http://${hostname}:5000/api/contact` // Use the current private IP\n  : isCampusNetwork ? 'http://172.17.69.71:5000/api/contact' : 'http://localhost:5000/api/contact'; // Fallback for local development\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        setStatus('Message sent successfully!');\n        setFormData({\n          name: '',\n          email: '',\n          message: ''\n        }); // Clear the form\n      } else {\n        setStatus('Failed to send message.');\n      }\n    } catch (error) {\n      setStatus('An error occurred. Please try again.');\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Message\",\n        value: formData.message,\n        onChange: e => setFormData({\n          ...formData,\n          message: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"1j7I61h8S/eN2zx5B4q3lcXOJt4=\");\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contact","_s","formData","setFormData","name","email","message","status","setStatus","isPrivateIP","hostname","test","window","location","isLocalNetwork","isCampusNetwork","includes","apiUrl","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/chris/Documents/website/myWebsite/frontend/src/pages/Contact.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Contact() {\r\n  const [formData, setFormData] = useState({ name: '', email: '', message: '' });\r\n  const [status, setStatus] = useState('');\r\n\r\n  // Function to determine if the current host is a private IP\r\n  const isPrivateIP = (hostname) => {\r\n    // Check for 192.168.x.x\r\n    if (/^192\\.168\\./.test(hostname)) return true;\r\n    // Check for 10.x.x.x\r\n    if (/^10\\./.test(hostname)) return true;\r\n    // Check for 172.16.x.x to 172.31.x.x\r\n    if (/^172\\.(1[6-9]|2[0-9]|3[0-1])\\./.test(hostname)) return true;\r\n    return false;\r\n  };\r\n\r\n  // Determine the correct API URL based on the environment\r\n  const hostname = window.location.hostname;\r\n  const isLocalNetwork = isPrivateIP(hostname);\r\n  const isCampusNetwork = hostname.includes('172.17.69.71');\r\n  const apiUrl = isLocalNetwork\r\n    ? `http://${hostname}:5000/api/contact` // Use the current private IP\r\n    : isCampusNetwork\r\n    ? 'http://172.17.69.71:5000/api/contact'\r\n    : 'http://localhost:5000/api/contact'; // Fallback for local development\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setStatus('Message sent successfully!');\r\n        setFormData({ name: '', email: '', message: '' }); // Clear the form\r\n      } else {\r\n        setStatus('Failed to send message.');\r\n      }\r\n    } catch (error) {\r\n      setStatus('An error occurred. Please try again.');\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contact Me</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={formData.name}\r\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({ ...formData, email: e.target.value })}\r\n          required\r\n        />\r\n        <textarea\r\n          placeholder=\"Message\"\r\n          value={formData.message}\r\n          onChange={(e) => setFormData({ ...formData, message: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      {status && <p>{status}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}